/* Libc.edl - EDL sample for trusted C library. */

enclave {    
	include "sgx_tseal.h"

	trusted {
		// public void ecall_authenticate([out] uint8_t *auth_ret, [in, size = sealed_data_size] sgx_sealed_data_t *p_sealed_data, uint32_t sealed_data_size, [in, string] const char *username_entered,[in, string] const char *password_entered);
		public sgx_status_t ecall_seal_data([in, string] const char* fileName, [in, size=length] void* data, int length);
		public void ecall_get_key(uint32_t pid, [out, size=server_key_len] char *server_key, int server_key_len, [in, size=client_key_len] const char *client_key, int client_key_len);
		public void ecall_verify_user_pwd(uint32_t session_id, [out, size=ret_iv_len] char *ret_iv, int ret_iv_len, [out, size=auth_len] char *auth_ret, int auth_len, [in, size=iv_len] const char *iv, int iv_len, [in, size=username_len] const char *username_entered, int username_len, [in, size=password_len] const char *password_entered, int password_len, [in, size=nullok_len] const char *nullok, int nullok_len);
		public void ecall_unseal_data([in, size = sealed_data_size] sgx_sealed_data_t *p_sealed_data, uint32_t sealed_data_size);
	};

	untrusted {
		[cdecl] void ocall_print_int(int a);
		void ocall_print_pointer([in, string] char *val);
		sgx_status_t save_data([in, string] const char* fileName, [in, size=length] void* data, long length);
		void ocall_sleep(void);
    	};
};

